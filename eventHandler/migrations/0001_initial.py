# Generated by Django 4.1.4 on 2023-01-08 19:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('birthday_date', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user')),
                ('place_employment', models.CharField(blank=True, max_length=1000, null=True)),
                ('gto_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SportObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('address', models.CharField(blank=True, max_length=45, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='sportObject')),
            ],
            options={
                'db_table': 'sport_object',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SportsmanSportTypeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'sportsman_sport_type_event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=45, null=True)),
                ('custom', models.IntegerField(blank=True, choices=[(0, 'Да'), (1, 'Нет')], default=1, null=True)),
                ('for_who', models.IntegerField(blank=True, choices=[(0, 'только Женщины'), (1, 'только Мужчины'), (2, 'Все')], default=2, null=True)),
            ],
            options={
                'db_table': 'sport_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SportTypeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('sport_object', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='eventHandler.sportobject')),
                ('sport_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='eventHandler.sporttype')),
                ('sportsmans', models.ManyToManyField(null=True, related_name='sportsmans', through='eventHandler.SportsmanSportTypeEvent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sport_type_event',
                'managed': True,
                'unique_together': {('id', 'sport_type', 'sport_object')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'team',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='sportsmansporttypeevent',
            name='sport_type_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='eventHandler.sporttypeevent'),
        ),
        migrations.AddField(
            model_name='sportsmansporttypeevent',
            name='sportsman',
            field=models.ForeignKey(db_column='sportsman', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sportsmansporttypeevent',
            name='team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='eventHandler.team'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_age', models.IntegerField(blank=True, default=120, null=True)),
                ('min_age', models.IntegerField(blank=True, default=0, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Планируется'), (1, 'Проводится'), (2, 'Подводятся итоги'), (3, 'Завершенно')], default=0, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='event')),
                ('owner', models.ForeignKey(db_column='owner', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SportTypeEventHasEvent',
            fields=[
                ('sport_type_event', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='eventHandler.sporttypeevent')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='eventHandler.event')),
            ],
            options={
                'db_table': 'sport_type_event_has_event',
                'managed': True,
                'unique_together': {('sport_type_event', 'event')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='sportsmansporttypeevent',
            unique_together={('team', 'sportsman', 'sport_type_event')},
        ),
        migrations.AddField(
            model_name='event',
            name='settings',
            field=models.ManyToManyField(related_name='settings', through='eventHandler.SportTypeEventHasEvent', to='eventHandler.sporttypeevent'),
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together={('id', 'owner')},
        ),
    ]
